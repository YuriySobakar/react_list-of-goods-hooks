{"version":3,"sources":["App.tsx","index.tsx"],"names":["Sort","goodsFromServer","BY_NAME","BY_LENGTH","App","useState","sortType","setSortType","isReversed","setIsReversed","sortedItems","goods","goodsCopy","ByName","sort","a","b","localeCompare","ByLength","length","reverse","sortByType","className","type","cn","onClick","hasState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0EAhBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAU,SACVC,EAAY,Y,SAEbH,K,gBAAAA,E,qBAAAA,M,KA4BE,IAAMI,EAAgB,WAC3B,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAAoBC,EAAiBL,EAAkBE,GACrD,IAAMI,EAAS,YAAOD,GAEtB,GAAIL,EACF,OAAQA,GACN,KAAKN,EAAKa,OACRD,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACzC,MACF,KAAKhB,EAAKkB,SACRN,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAW5C,OAJIX,GACFI,EAAUQ,UAGLR,EAMaS,CAAWpB,EAAiBK,EAAUE,GAmB1D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYlB,IAAaJ,IAC7BuB,QAxBW,WACjBlB,EAAYL,IAmBR,iCASA,wBACEqB,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CAAE,WAAYlB,IAAaH,IAErDsB,QA9Ba,WACnBlB,EAAYJ,IAwBR,4BAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CAAE,YAAahB,IACrDiB,QAlCa,WACnBhB,GAAc,SAAAiB,GAAQ,OAAKA,MA8BvB,sBAQEpB,GAAYE,IAEV,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAxCE,WACZlB,EAAY,IACZE,GAAc,IAmCN,sBAUN,6BACGC,EAAYiB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAAgCA,GAARA,YChHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a65c2514.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst BY_NAME = 'byName';\nconst BY_LENGTH = 'byLength';\n\nenum Sort {\n  ByName = 'byName',\n  ByLength = 'byLength',\n}\n\nfunction sortByType(goods: string[], sortType: string, isReversed: boolean) {\n  const goodsCopy = [...goods];\n\n  if (sortType) {\n    switch (sortType) {\n      case Sort.ByName:\n        goodsCopy.sort((a, b) => a.localeCompare(b));\n        break;\n      case Sort.ByLength:\n        goodsCopy.sort((a, b) => a.length - b.length);\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (isReversed) {\n    goodsCopy.reverse();\n  }\n\n  return goodsCopy;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedItems = sortByType(goodsFromServer, sortType, isReversed);\n\n  const sortByName = () => {\n    setSortType(BY_NAME);\n  };\n\n  const sortByLength = () => {\n    setSortType(BY_LENGTH);\n  };\n\n  const makeReversed = () => {\n    setIsReversed(hasState => !hasState);\n  };\n\n  const reset = () => {\n    setSortType('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortType !== BY_NAME })}\n          onClick={sortByName}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button', 'is-success', { 'is-light': sortType !== BY_LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !isReversed })}\n          onClick={makeReversed}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {sortedItems.map(good => (\n          <li data-cy=\"Good\" key={good}>{ good }</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}